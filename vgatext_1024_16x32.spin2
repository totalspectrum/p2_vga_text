''
'' clock frequency settings
'' for 1024x768 we use a 65 MHz pixel clock
'' and clock the P2 to 200 MHz

CON
  pixel_clock_freq = 65_000_000

  ROWS = 24
  FONT_WIDTH = 16
  COLS = 1024 / FONT_WIDTH
  FONT_HEIGHT = 32
  CELL_SIZE = 8  ' bytes per character: use 4 for 8bpp colors, 8 for 24bpp colors
	
DAT
	orgh
'
' font buffer
'
	long
fontdata
	file "spleen-16x32.bin"

'=================================================================================================================
' BELOW HERE IS THE DEMO CODE
'=================================================================================================================
democolors
    long $FF000000, $FFFF0000, $00FF0000, $00FFFF00
    long $0000FF00, $FF00FF00, $FFFFFF00, $00000000
    long $7F000000, $007F7F00, $007F0000

VAR
    long params[40] ' parameters for running the VGA tile driver
    long screen_buffer[ROWS*COLS*(CELL_SIZE/4)]
    
OBJ
    vga: "vga_tile_driver.spin2"

PUB start(pinbase) | i, pclkscale, pclk, sysclk, x
  ' calculate clock frequency
  pclk := pixel_clock_freq ' pixel clock
  sysclk := clkfreq  ' system clock
  ' calculate scale := $8000_0000 * pclk / sysclk
  ' this is equal to pclk / (sysclk / $8000_000)
  pclkscale := calcscale(pclk, sysclk)

  i := 0
  params[i++] := pinbase
  params[i++] := @screen_buffer	' screen buffer
  params[i++] := COLS           ' screen columns
  params[i++] := ROWS           ' screen rows
  params[i++] := @fontdata	' font data
  params[i++] := FONT_WIDTH	' font width
  params[i++] := FONT_HEIGHT    ' font height
  params[i++] := pclkscale 'fset           ' pixel clock scaling value
  params[i++] := 24             ' horizontal front porch
  params[i++] := 136             ' hsync pulse
  params[i++] := 160             ' horizontal back porch
  params[i++] := 3             ' vertical front porch
  params[i++] := 6              ' vertical sync lines
  params[i++] := 29             ' vertical back porch
  params[i++] := %00            ' vertical/horizontal polarity
  params[i++] := CELL_SIZE
  
  x := vga.start(@params)
  init_terminal
  return x
  
PUB stop
  vga.stop

#include "vga_text_routines.spinh"
#include "std_text_routines.spinh"

